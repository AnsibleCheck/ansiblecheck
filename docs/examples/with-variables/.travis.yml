language: python
services: docker

env:
  - distribution: Ubuntu
    distribution_version: bionic
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distribution: Ubuntu
    distribution_version: xenial
    version: "1"
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distribution: EL
    distribution_version: "7"
    version: "1"
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distribution: EL
    distribution_version: "6"
    version: "1"
    init: /sbin/init
    run_opts: ""
  - distribution: Debian
    distribution_version: buster
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distribution: Debian
    distribution_version: stretch
    version: "1"
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distribution: Debian
    distribution_version: jessie
    version: "1"
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distribution: Fedora
    distribution_version: "24"
    version: "1"
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distribution: Ubuntu
    distribution_version: xenial
    version: "2"
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distribution: EL
    distribution_version: "7"
    version: "2"
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distribution: EL
    distribution_version: "6"
    version: "2"
    init: /sbin/init
    run_opts: ""
  - distribution: Debian
    distribution_version: jessie
    version: "2"
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distribution: Fedora
    distribution_version: "24"
    version: "2"
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"

before_install:
  # Pull container from Docker Hub.
  - 'docker pull ansiblecheck/ansiblecheck:${distribution,,}-${distribution_version}'

script:
  - container_id=$(mktemp)
  # Start The Built Container In The Background
  - 'docker run --detach --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} ansiblecheck/ansiblecheck:"${distribution,,}"-"${distribution_version}" "${init}" > "${container_id}"'

  # Install requirements, Uncomment if needed
  # - 'docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=true ansible-galaxy install -v -r /etc/ansible/roles/role_under_test/requirements.yml'

  # Ansible syntax check.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml --syntax-check'

  # Run linters
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-lint /etc/ansible/roles/role_under_test/tasks/main.yml'
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm yamllint /etc/ansible/roles/role_under_test/'

  # Test role.
  - 'docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml --extra-vars="role_version=${version}" '

  # Test Idempotence
  - idempotence=$(mktemp)
  - docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml --extra-vars="role_version=${version}" | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
